# -*- coding: utf-8 -*-
"""mixedIntegerProgramming_rastrigin.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/140h58v7AeJ87jE9fV5z-ekZpoM2Yijna
"""

!pip install -q pyomo

import numpy as np
from pyomo.environ import *

def rastrigin(model):
  return 20 + model.x**2 + model.y**2 - 10 * (cos(2 * np.pi * model.x) + cos(2 * np.pi * model.y))

# --- Create a model
model         = ConcreteModel()

# --- Declare variables with bounds
model.x         = Var(bounds = (int(5 * np.pi), int(20 * np.pi)), within = Integers)
model.y         = Var(bounds = (-20 * np.pi, -4 * np.pi), within = Reals)

# --- Declare objective function
model.objfun    = Objective(rule = rastrigin, sense = minimize)

model.pprint()

!wget -N -q "https://github.com/thomasfork/ipopt_linux/raw/main/ipopt-linux64.zip"
!unzip -o -q ipopt-linux64

SolverFactory('ipopt', executable='/content/ipopt').solve(model).write()
#SolverFactory('multistart').solve(model, strategy = 'rand_guess_and_bound', solver = 'ipopt', iterations = 50).write()

# display solution
print('\nObjective function = ', model.objfun)

print('\nDecision Variables')
print('x = ', model.x())
print('y = ', model.y())